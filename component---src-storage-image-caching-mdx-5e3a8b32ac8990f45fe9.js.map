{"version":3,"sources":["webpack:///../src/storage/image-caching.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,Q,+MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,+IACA,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,GAAM,yBADR,0BAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,guC,sMA4CTJ,EAAWK,gBAAiB","file":"component---src-storage-image-caching-mdx-5e3a8b32ac8990f45fe9.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/levioza/android-basics-refresher/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h1>\n    <p>{`This code snippet presents an image cache manager that could help you cache an image or fetch an image from the cache.`}</p>\n    <h2 {...{\n      \"id\": \"code\"\n    }}>{`Code`}</h2>\n    <h3 {...{\n      \"id\": \"imagecachemanagerjava\"\n    }}>{`ImageCacheManager.java`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class ImageCacheManager {\n\n    public static Bitmap getBitmap(Context context, DataItem dataItem) {\n\n        String fileName = context.getCacheDir() + \"/\" + dataItem.getImage();\n        File file = new File(fileName);\n        if (file.exists()) {\n            try {\n                return BitmapFactory.decodeStream(new FileInputStream(file));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n        return null;\n\n    }\n\n    public static void putBitmap(Context context, DataItem dataItem, Bitmap bitmap) {\n        String fileName = context.getCacheDir() + \"/\" + dataItem.getImage();\n        File file = new File(fileName);\n        FileOutputStream outputStream = null;\n        try {\n            outputStream = new FileOutputStream(file);\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 85, outputStream);\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (outputStream != null) {\n                try {\n                    outputStream.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}