{"version":3,"sources":["webpack:///../src/libraries/networking.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2eAMO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,gKACA,iBAAQ,CACN,GAAM,aADR,aAGA,iBAAQ,CACN,GAAM,YACL,mBAAGC,WAAW,MAAS,CACtB,KAAQ,uCADT,aAGH,6EACA,iBAAQ,CACN,GAAM,UACL,mBAAGA,WAAW,MAAS,CACtB,KAAQ,qCADT,WAGH,0EACA,iBAAQ,CACN,GAAM,kBACL,mBAAGA,WAAW,MAAS,CACtB,KAAQ,oDADT,mBAGH,ugBACA,iBAAQ,CACN,GAAM,cADR,cAGA,+BAAe,mBAAGA,WAAW,KAAQ,CACjC,KAAQ,uCADG,sCAAf,sCAGA,+BAAe,mBAAGA,WAAW,KAAQ,CACjC,KAAQ,qCADG,oCAAf,sCAGA,+BAAe,mBAAGA,WAAW,KAAQ,CACjC,KAAQ,oDADG,mDAAf,uC,qMAOJJ,EAAWK,gBAAiB","file":"component---src-libraries-networking-mdx-6631cde2a16d093afc60.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/levioza/android-basics-refresher/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h1>\n    <p>{`In this page, I provide references to the libraries that could help in performing http requests to webservices or GraphQL-based server.`}</p>\n    <h2 {...{\n      \"id\": \"libraries\"\n    }}>{`Libraries`}</h2>\n    <h3 {...{\n      \"id\": \"retrofit\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"https://square.github.io/retrofit/\"\n      }}>{`Retrofit`}</a></h3>\n    <p>{`A type-safe HTTP client for Android and Java. `}{`[1]`}</p>\n    <h3 {...{\n      \"id\": \"okhttp\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"https://square.github.io/okhttp/\"\n      }}>{`OkHttp`}</a></h3>\n    <p>{`OkHttp is an HTTP client thatâ€™s efficient. `}{`[2]`}</p>\n    <h3 {...{\n      \"id\": \"apollo-android\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"https://github.com/apollographql/apollo-android\"\n      }}>{`Apollo Android`}</a></h3>\n    <p>{`Apollo-Android is a GraphQL compliant client that generates Java and Kotlin models from standard GraphQL queries. These models give you a typesafe API to work with GraphQL servers. Apollo will help you keep your GraphQL query statements together, organized, and easy to access. Change a query and recompile your project - Apollo code gen will rebuild your data model. Code generation also allows Apollo to read and unmarshal responses from the network without the need of any reflection. `}{`[3]`}</p>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <p>{`[1]`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://square.github.io/retrofit/\"\n      }}>{`https://square.github.io/retrofit/`}</a>{`, Accessed 30th of December, 2019.`}</p>\n    <p>{`[2]`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://square.github.io/okhttp/\"\n      }}>{`https://square.github.io/okhttp/`}</a>{`, Accessed 30th of December, 2019.`}</p>\n    <p>{`[3]`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apollographql/apollo-android\"\n      }}>{`https://github.com/apollographql/apollo-android`}</a>{`, Accessed 30th of December, 2019.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}