{"version":3,"sources":["webpack:///../src/fragments/custom-dialog.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"weAMO,IAAMA,EAAe,Q,iNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,qGACA,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,GAAM,oBADR,qBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,0uCAuCL,iBAAQ,CACN,GAAM,sBADR,uBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gZAeL,iBAAQ,CACN,GAAM,4BADR,6BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,yTAaL,iBAAQ,CACN,GAAM,uBADR,wBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,qwE,wMA4ETJ,EAAWK,gBAAiB","file":"component---src-fragments-custom-dialog-mdx-c8d2e8a413053eac97ac.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/levioza/android-basics-refresher/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h1>\n    <p>{`In this example, we can see how to create a custom dialog inside a fragment.`}</p>\n    <h2 {...{\n      \"id\": \"code\"\n    }}>{`Code`}</h2>\n    <h3 {...{\n      \"id\": \"mainactivityjava\"\n    }}>{`MainActivity.java`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MainActivity extends AppCompatActivity implements DataEntryDialog.DataEntryListener {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        if (fab == null) throw new AssertionError();\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                showDialog();\n            }\n        });\n    }\n\n    private void showDialog() {\n        Person p = new Person();\n        p.setFirstName(\"Fadi\");\n        p.setLastName(\"William\");\n        p.setAge(26);\n\n        DataEntryDialog dialog = DataEntryDialog.newInstance(p);\n        dialog.show(getSupportFragmentManager(), \"DIALOG_FRAGMENT\");\n    }\n\n    @Override\n    public void onDataEntryComplete(Person p) {\n        Toast.makeText(MainActivity.this,\n                \"You entered \" + p.getFirstName() + \" \" + p.getLastName(),\n                Toast.LENGTH_SHORT).show();\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"simplefragmentjava\"\n    }}>{`SimpleFragment.java`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class SimpleFragment extends Fragment {\n\n    public SimpleFragment() {\n        // Required empty public constructor.\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        // Inflate the layout for this fragment.\n        return inflater.inflate(R.layout.fragment_simple, container, false);\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"mainactivityfragmentjava\"\n    }}>{`MainActivityFragment.java`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MainActivityFragment extends Fragment {\n\n    public MainActivityFragment() {\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_main, container, false);\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"dataentrydialogjava\"\n    }}>{`DataEntryDialog.java`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class DataEntryDialog extends DialogFragment {\n\n    public static final String PERSON_KEY = \"PERSON_KEY\";\n    EditText etFirstName, etLastName, etAge;\n    private DataEntryListener mListener;\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        mListener = (DataEntryListener) getActivity();\n    }\n\n    public static DataEntryDialog newInstance(Person person) {\n        Bundle args = new Bundle();\n        args.putParcelable(\"PERSON_KEY\", person);\n\n        DataEntryDialog fragment = new DataEntryDialog();\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {\n        View rootView = inflater.inflate(R.layout.data_entry_dialog, container, false);\n\n        etFirstName = (EditText) rootView.findViewById(R.id.textFirstName);\n        etLastName = (EditText) rootView.findViewById(R.id.textLastName);\n        etAge = (EditText) rootView.findViewById(R.id.textAge);\n\n        Person person = getArguments().getParcelable(PERSON_KEY);\n\n        etFirstName.setText(person.getFirstName());\n        etLastName.setText(person.getLastName());\n        etAge.setText(String.valueOf(person.getAge()));\n\n        Button btnOk = rootView.findViewById(R.id.btnOk);\n        btnOk.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                saveData();\n            }\n        });\n\n        Button btnCancel = (Button) rootView.findViewById(R.id.btnCancel);\n        btnCancel.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                dismiss();\n            }\n        });\n\n        return rootView;\n    }\n\n    private void saveData() {\n        Person p = new Person();\n        p.setFirstName(etFirstName.getText().toString());\n        p.setLastName(etLastName.getText().toString());\n        p.setAge(Integer.valueOf(etAge.getText().toString()));\n\n        mListener.onDataEntryComplete(p);\n        dismiss();\n    }\n\n    public interface DataEntryListener {\n        void onDataEntryComplete(Person p);\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}