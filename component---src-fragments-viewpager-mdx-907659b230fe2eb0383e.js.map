{"version":3,"sources":["webpack:///../src/fragments/viewpager.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,+EACA,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,GAAM,oBADR,qBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,otCA8CL,iBAAQ,CACN,GAAM,oBADR,qBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,60D,oMA2DTJ,EAAWK,gBAAiB","file":"component---src-fragments-viewpager-mdx-907659b230fe2eb0383e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/levioza/android-basics-refresher/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h1>\n    <p>{`In this example, we can see how to create a viewpager.`}</p>\n    <h2 {...{\n      \"id\": \"code\"\n    }}>{`Code`}</h2>\n    <h3 {...{\n      \"id\": \"mainactivityjava\"\n    }}>{`MainActivity.java`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MainActivity extends AppCompatActivity {\n\n    private final List<Product> products = DataProvider.productList;\n    private final int numPages = products.size();\n\n    private ViewPager mPager;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        mPager = (ViewPager) findViewById(R.id.pager);\n        PagerAdapter pagerAdapter = new ViewPagerAdapter(getSupportFragmentManager());\n        mPager.setAdapter(pagerAdapter);\n    }\n\n    private class ViewPagerAdapter extends FragmentStatePagerAdapter {\n\n        public ViewPagerAdapter(FragmentManager fm) {\n            super(fm);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            return ItemFragment.newInstance(products.get(position));\n        }\n\n        @Override\n        public int getCount() {\n            return numPages;\n        }\n    }\n\n    @Override\n    public void onBackPressed() {\n        if (mPager.getCurrentItem() == 0) {\n            super.onBackPressed();\n        } else {\n            mPager.setCurrentItem(mPager.getCurrentItem() - 1);\n        }\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"itemfragmentjava\"\n    }}>{`ItemFragment.java`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class ItemFragment extends Fragment {\n\n    private Product mProduct;\n    private static final String PRODUCT_KEY = \"product_key\";\n\n    public static ItemFragment newInstance(Product product) {\n\n        Bundle args = new Bundle();\n        args.putParcelable(PRODUCT_KEY, product);\n\n        ItemFragment fragment = new ItemFragment();\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    public ItemFragment() {\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n\n        ViewGroup rootView = (ViewGroup) inflater\n                .inflate(R.layout.fragment_detail, container, false);\n\n        Bundle args = getArguments();\n        if (args == null) throw new AssertionError();\n\n        mProduct = args.getParcelable(PRODUCT_KEY);\n        if (mProduct == null) throw new AssertionError();\n\n        // Display data.\n        TextView nameText = (TextView) rootView.findViewById(R.id.nameText);\n        nameText.setText(mProduct.getName());\n\n        TextView descriptionText = (TextView) rootView.findViewById(R.id.descriptionText);\n        descriptionText.setText(mProduct.getDescription());\n\n        NumberFormat formatter = NumberFormat.getCurrencyInstance();\n        String price = formatter.format(mProduct.getPrice());\n        TextView priceText = (TextView) rootView.findViewById(R.id.priceText);\n        priceText.setText(price);\n\n        String productId = mProduct.getProductId();\n        int imageResource = getActivity().getResources()\n                .getIdentifier(productId, \"drawable\", getActivity().getPackageName());\n        ImageView iv = (ImageView) rootView.findViewById(R.id.imageView);\n        iv.setImageResource(imageResource);\n\n        return rootView;\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}