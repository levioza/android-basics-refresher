(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{OpIB:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return l}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var a=t("/FXl"),r=t("TjRS");t("aD51");function i(){return(i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/concurrent-tasks/intent-service.mdx"}});var o={_frontmatter:c},s=r.a;function l(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(a.b)(s,i({},o,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"description"},"Description"),Object(a.b)("p",null,"In this example, we use an intent service to perform a task in the background."),Object(a.b)("h2",{id:"code"},"Code"),Object(a.b)("h3",{id:"mainactivityjava"},"MainActivity.java"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-java"}),'public class MainActivity extends AppCompatActivity {\n\n    private static final String JSON_URL =\n            "https://jsonplaceholder.typicode.com/users";\n    TextView output;\n\n    private BroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {\n        @Override\n        public void onReceive(Context context, Intent intent) {\n            String message = intent.getStringExtra(MyService.MY_SERVICE_PAYLOAD);\n            output.append(message + "\\n");\n        }\n    };\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        output = (TextView) findViewById(R.id.output);\n\n        LocalBroadcastManager.getInstance(getApplicationContext()).registerReceiver(mBroadcastReceiver, new IntentFilter(MyService.My_SERVICE_MESSAGE));\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        LocalBroadcastManager.getInstance(getApplicationContext()).unregisterReceiver(mBroadcastReceiver);\n    }\n\n    public void runClickHandler(View view) {\n        Intent intent = new Intent(this, MyService.class);\n        intent.setData(Uri.parse(JSON_URL));\n        startService(intent);\n    }\n\n    public void clearClickHandler(View view) {\n        output.setText("");\n    }\n}\n')),Object(a.b)("h3",{id:"myservicejava"},"MyService.java"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-java"}),'public class MyService extends IntentService {\n\n    public static final String TAG = "MyService";\n    public static final String My_SERVICE_MESSAGE = "myServiceMessage";\n    public static final String MY_SERVICE_PAYLOAD = "myServicePayload";\n\n    public MyService() {\n        super("MyService");\n    }\n\n    @Override\n    protected void onHandleIntent(Intent intent) {\n        Uri uri = intent.getData();\n        Log.i(TAG, "onHandleIntent: " + uri.toString());\n\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        Intent messageIntent = new Intent(My_SERVICE_MESSAGE);\n        messageIntent.putExtra(MY_SERVICE_PAYLOAD, "Service all done!");\n        LocalBroadcastManager localBroadcastManager = LocalBroadcastManager.getInstance(getApplicationContext());\n\n        localBroadcastManager.sendBroadcast(messageIntent);\n    }\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        Log.i(TAG, "onCreate");\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        Log.i(TAG, "onDestroy");\n    }\n}\n')))}l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/concurrent-tasks/intent-service.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-concurrent-tasks-intent-service-mdx-e1e530f11ff421ffe2cb.js.map